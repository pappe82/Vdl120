using System.Collections.Generic;

namespace Vdl120io
{
    public static class NumCodec
    {
        public static ushort Encode(this short value)
        {
            if (value < 0)
            {
                var data = Data[-value];
                return (ushort)(data | 0x8000);
            }

            return Data[value];
        }

        public static short Decode(this ushort code)
        {
            if ((code & 0x8000) > 0)
            {
                code ^= 0x8000;

                return (short)(-1 * Data.IndexOf(code));
            }


            return (short)Data.IndexOf(code);
        }

        static readonly List<ushort> Data = new()
        {
            0x0000, /*   0 */
            0x3F80, /*   1 */
            0x4000, /*   2 */
            0x4040, /*   3 */
            0x4080, /*   4 */
            0x40A0, /*   5 */
            0x40C0, /*   6 */
            0x40E0, /*   7 */
            0x4100, /*   8 */
            0x4110, /*   9 */
            0x4120, /*  10 */
            0x4130, /*  11 */
            0x4140, /*  12 */
            0x4150, /*  13 */
            0x4160, /*  14 */
            0x4170, /*  15 */
            0x4180, /*  16 */
            0x4188, /*  17 */
            0x4190, /*  18 */
            0x4198, /*  19 */
            0x41A0, /*  20 */
            0x41A8, /*  21 */
            0x41B0, /*  22 */
            0x41B8, /*  23 */
            0x41C0, /*  24 */
            0x41C8, /*  25 */
            0x41D0, /*  26 */
            0x41D8, /*  27 */
            0x41E0, /*  28 */
            0x41E8, /*  29 */
            0x41F0, /*  30 */
            0x41F8, /*  31 */
            0x4200, /*  32 */
            0x4204, /*  33 */
            0x4208, /*  34 */
            0x420C, /*  35 */
            0x4210, /*  36 */
            0x4214, /*  37 */
            0x4218, /*  38 */
            0x421C, /*  39 */
            0x4220, /*  40 */
            0x4224, /*  41 */
            0x4228, /*  42 */
            0x422C, /*  43 */
            0x4230, /*  44 */
            0x4234, /*  45 */
            0x4238, /*  46 */
            0x423C, /*  47 */
            0x4240, /*  48 */
            0x4244, /*  49 */
            0x4248, /*  50 */
            0x424C, /*  51 */
            0x4250, /*  52 */
            0x4254, /*  53 */
            0x4258, /*  54 */
            0x425C, /*  55 */
            0x4260, /*  56 */
            0x4264, /*  57 */
            0x4268, /*  58 */
            0x426C, /*  59 */
            0x4270, /*  60 */
            0x4274, /*  61 */
            0x4278, /*  62 */
            0x427C, /*  63 */
            0x4280, /*  64 */
            0x4282, /*  65 */
            0x4284, /*  66 */
            0x4286, /*  67 */
            0x4288, /*  68 */
            0x428A, /*  69 */
            0x428C, /*  70 */
            0x428E, /*  71 */
            0x4290, /*  72 */
            0x4292, /*  73 */
            0x4294, /*  74 */
            0x4296, /*  75 */
            0x4298, /*  76 */
            0x429A, /*  77 */
            0x429C, /*  78 */
            0x429E, /*  79 */
            0x42A0, /*  80 */
            0x42A2, /*  81 */
            0x42A4, /*  82 */
            0x42A6, /*  83 */
            0x42A8, /*  84 */
            0x42AA, /*  85 */
            0x42AC, /*  86 */
            0x42AE, /*  87 */
            0x42B0, /*  88 */
            0x42B2, /*  89 */
            0x42B4, /*  90 */
            0x42B6, /*  91 */
            0x42B8, /*  92 */
            0x42BA, /*  93 */
            0x42BC, /*  94 */
            0x42BE, /*  95 */
            0x42C0, /*  96 */
            0x42C2, /*  97 */
            0x42C4, /*  98 */
            0x42C6, /*  99 */
            0x42C8, /* 100 */
        };
    }
}